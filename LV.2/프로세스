#include <string>
#include <vector>
#include <queue>
#include <algorithm>

using namespace std;

//2, 1, 2
int solution(vector<int> priorities, int location) {
    int answer = 0;
    queue<pair<int,int>> q; //프로세스번호, 우선순위
    vector<int> v; //실행 순서 {2, }
    for(int i=0; i<priorities.size(); i++)
        q.push({i, priorities[i]});
    while(!q.empty()) {
        pair<int, int> cur = q.front(); //<3,2> <0,2>, <1,1>
        q.pop();
        if(cur.second == *max_element(priorities.begin(), priorities.end())) {
            priorities[cur.first] = -1;   
            v.push_back(cur.first);
        }
        else
            q.push(cur);
    }
    for(int i=0; i<v.size(); i++) 
        if(v[i] == location) answer = i+1;

    return answer;
}
