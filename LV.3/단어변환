#include <string>
#include <vector>
#include <algorithm>
#include <queue>

using namespace std;

int times[51];
bool vis[51];

bool onediff(string s1, string s2) { //한 글자만 다른지 확인하는 함수
    int diff = 0;
    for(int j=0; j<s2.size(); j++)
        if(s1[j] != s2[j]) diff++;
    if(diff != 1) return false;
    else return true;
}

int solution(string begin, string target, vector<string> words) {
    int answer = 0;
    if(find(words.begin(), words.end(), target) == words.end()) return 0;
    for(int i=0; i<words.size(); i++) {
        fill(times, times+51, 0);
        fill(vis, vis+51, false);
        queue<pair<string, int>> q; //단어, idx
        if(!onediff(begin, words[i])) continue; 
        q.push({words[i], i});
        vis[i] = true;
        times[i] = 1;
        while(!q.empty()) {
            pair<string, int> cur = q.front();
            q.pop();
            for(int j=0; j<words.size(); j++) {
                if(vis[j]) continue;
                if(!onediff(cur.first, words[j])) continue;
                q.push({words[j], j});
                vis[j] = true;
                times[j] = times[cur.second] + 1;
            }
        }
        for(int j=0; j<words.size(); j++) {
            if(words[j].compare(target) == 0) answer = max(answer, times[j]);
        }
    }
    
    return answer;
}
